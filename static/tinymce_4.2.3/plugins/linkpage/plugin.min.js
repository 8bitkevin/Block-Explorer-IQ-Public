var placeholderText = django.gettext('Search Everipedia');

tinymce.PluginManager.add('linkpage', function(editor, url) {
   var self = this, button, menuInstance, menuDOMString;
   var clickedOnce = false;

   function getValues() {
      var injectionDiv = "<div class='linkpage-container'><input placeholder='" + placeholderText + "' name='SearchBox' autocomplete='off' id='AJAXBox' type='text' value='' class='search-query form-control'></div>"
      tinyMCE.activeEditor.settings.myKeyValueList = [{text: injectionDiv, value: "VALUEPLACEHOLDER"}];
      return editor.settings.myKeyValueList;

      }

   // Add a button that opens a window
   editor.addButton('linkpage', {
      type: 'listbox',
      title: django.gettext('Link'),
      text: django.gettext('Link'),
      icon: 'icon-link',
      values: getValues(),
      onclick: function() {
         //console.log(editor);
         if (clickedOnce == false){
            menuInstance = this.menu;
            menuDOMString = "#" + menuInstance._id;
            $(menuDOMString).addClass("tinymce-linkpage-menu tinymce-pages-only");
            $(menuDOMString).attr("data-mce-editor-id", editor.id);


            var theHTML = "<div class='linkpage-container' data-domstring='" + menuDOMString + "'><input placeholder='" + placeholderText + "' name='SearchBox-TinyMCE' autocomplete='off' onclick='this.select();this.focus();' id='AJAXBox-TinyMCE' type='text' value='' /><div id='linkpage_results' class='pages-only' data-editor-id='" + editor.id + "' ></div></div>";
            var specificSelector = ".tinymce-linkpage-menu.tinymce-pages-only[data-mce-editor-id='" + editor.id + "']"
            $(specificSelector).html(theHTML);
            clickedOnce = true;
         }
         $('#AJAXBox-TinyMCE').focus();
      },
      // onselect: function() {
      //    if (this.value() != "VALUEPLACEHOLDER"){
      //       editor.insertContent(this.value());
      //       this.value(null);
      //    }
      //
      //
      //
      //    //reset selected value
      //
      // },
      onPostRender: function() {
         //this.classes.
         button = this;
      },
   });

   self.refresh = function() {
      //remove existing menu if it is already rendered
      if(button.menu){
         button.menu.remove();
         button.menu = null;
      }

      button.settings.values = button.settings.menu = getValues();
   };


});

