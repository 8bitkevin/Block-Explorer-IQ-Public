user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  custom  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" "$request_body" ';



    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;

    access_log  /var/log/nginx/access.log  custom;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;
    client_max_body_size 150m;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;

    #add new instance IPs to this app server directive
    #don't forget that this loads static files from all app servers from the lb instance
    upstream app_server {
        server 127.0.0.1:8000 fail_timeout=0;
    }
    upstream nodeos_server {
        server 127.0.0.1:7777 fail_timeout=0;
    }


	server {
      listen 80 default_server;
      listen 443 ssl http2 default_server;
      listen [::]:80 default_server;
      listen [::]:443 ssl http2 default_server;

      server_name _;
      return 301 https://iqnetwork.io$new_request_uri;
    }


    server {

       listen       443 ssl http2 default_server;
       listen       [::]:443 ssl http2 default_server;
       server_name iqnetwork.io www.iqnetwork.io
       ssl on;
       ssl_certificate "/etc/nginx/iqnetwork_io.crt";
       ssl_certificate_key "/etc/nginx/iqnetwork_io.key";
       #ssl_session_cache shared:SSL:1m;
       #ssl_session_timeout  10m;
       #ssl_ciphers HIGH:!aNULL:!MD5;
       #ssl_prefer_server_ciphers on;
       add_header 'Access-Control-Allow-Origin' '*';
       gzip on;
       gunzip on;


        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

       #don't forget that this loads static files from all app servers from the lb instance

       location /static {
           alias /datadrive/BlockExplorer/static;
           expires 1d;
           access_log off;
           add_header Cache-Control "public";
       }

       location / {
			proxy_pass http://app_server;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $http_host;
			proxy_redirect off;
       }

       location /favicon.ico {
           alias /datadrive/BlockExplorer/static/images/favicon.ico;
           expires 1d;
           access_log off;
           add_header Cache-Control "public";
       }


        error_page 404 /404.html;
        location = /40x.html {

        }

	error_page 500 502 503 504 /50x.html;
        location = /50x.html {

        }


        break;
    }



	server {
        listen 80;
        server_name iqnetwork.io ;
        set $new_request_uri $request_uri;
        if ($request_uri ~ ^(/.*[^/])$) {
            set $new_request_uri $1/;
        }
        return 301 https://iqnetwork.io$new_request_uri;
	}


}
